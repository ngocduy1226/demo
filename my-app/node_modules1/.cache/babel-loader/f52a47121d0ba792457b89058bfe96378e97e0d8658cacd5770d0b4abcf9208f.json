{"ast":null,"code":"import axios from 'axios';\nimport _ from 'lodash';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n  withCredentials: true\n});\n\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\n//     const error = new Error();\n//     error.httpStatusCode = httpStatusCode;\n//     error.statusCode = statusCode;\n//     error.errorMessage = errorMessage;\n//     error.problems = problems;\n//     error.errorCode = errorCode + \"\";\n//     return error;\n// };\n\n// export const isSuccessStatusCode = (s) => {\n//     // May be string or number\n//     const statusType = typeof s;\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\n// };\n\ninstance.interceptors.response.use(response => {\n  // Thrown error for request with OK status code\n  const {\n    data\n  } = response;\n  return response.data;\n});\nexport default instance;","map":{"version":3,"names":["axios","_","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","withCredentials","interceptors","response","use","data"],"sources":["D:/LUẬN VĂN/demo/my-app/src/axios.js"],"sourcesContent":["import axios from 'axios';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL,\r\n    withCredentials: true\r\n});\r\n\r\n// const createError = (httpStatusCode, statusCode, errorMessage, problems, errorCode = '') => {\r\n//     const error = new Error();\r\n//     error.httpStatusCode = httpStatusCode;\r\n//     error.statusCode = statusCode;\r\n//     error.errorMessage = errorMessage;\r\n//     error.problems = problems;\r\n//     error.errorCode = errorCode + \"\";\r\n//     return error;\r\n// };\r\n\r\n// export const isSuccessStatusCode = (s) => {\r\n//     // May be string or number\r\n//     const statusType = typeof s;\r\n//     return (statusType === 'number' && s === 0) || (statusType === 'string' && s.toUpperCase() === 'OK');\r\n// };\r\n\r\ninstance.interceptors.response.use(\r\n    (response) => {\r\n        // Thrown error for request with OK status code\r\n        const { data } = response;\r\n        return response.data;\r\n    },\r\n\r\n);\r\n\r\nexport default instance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,QAAQ;AAGtB,MAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC1BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,qBAAqB;EAC1CC,eAAe,EAAE;AACrB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEAN,QAAQ,CAACO,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,IAAK;EACV;EACA,MAAM;IAAEE;EAAK,CAAC,GAAGF,QAAQ;EACzB,OAAOA,QAAQ,CAACE,IAAI;AACxB,CAEJ,CAAC;AAED,eAAeV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}